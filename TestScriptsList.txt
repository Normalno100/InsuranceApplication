# –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø—Ä–æ–µ–∫—Ç–∞ Travel Insurance

## üìã –û–≥–ª–∞–≤–ª–µ–Ω–∏–µ
1. [DateTimeServiceTest](#1-datetimeservicetest)
2. [TravelCalculatePremiumRequestValidatorTest](#2-travelcalculatepremiumrequestvalidatortest)
3. [TravelCalculatePremiumServiceImplTest](#3-travelcalculatepremiumserviceimpltest)
4. [TravelCalculatePremiumControllerTest](#4-travelcalculatepremiumcontrollertest)

---

## 1. DateTimeServiceTest

**–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 45**

### –ì—Ä—É–ø–ø–∞ 1: Basic Scenarios (4 —Ç–µ—Å—Ç–∞)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 1.1 | `shouldReturnZeroDaysForSameDates` | –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–∞—Ç—ã | 0 –¥–Ω–µ–π |
| 1.2 | `shouldReturnPositiveDaysWhenDate2IsAfterDate1` | date2 > date1 | –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (9) |
| 1.3 | `shouldReturnNegativeDaysWhenDate1IsAfterDate2` | date1 > date2 | –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (-9) |
| 1.4 | `shouldReturnOneDayForConsecutiveDates` | –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –¥–Ω–∏ | 1 –¥–µ–Ω—å |

### –ì—Ä—É–ø–ø–∞ 2: Different Time Periods (7 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 2.1 | `shouldCalculateDaysWithinSameMonth` | –î–∞—Ç—ã –≤ –æ–¥–Ω–æ–º –º–µ—Å—è—Ü–µ | 15 –¥–Ω–µ–π |
| 2.2 | `shouldCalculateDaysAcrossDifferentMonths` | –ß–µ—Ä–µ–∑ –≥—Ä–∞–Ω–∏—Ü—É –º–µ—Å—è—Ü–∞ | 29 –¥–Ω–µ–π |
| 2.3 | `shouldCalculateDaysAcrossDifferentYears` | –ß–µ—Ä–µ–∑ –≥—Ä–∞–Ω–∏—Ü—É –≥–æ–¥–∞ | 1 –¥–µ–Ω—å |
| 2.4 | `shouldCalculateOneWeek` | –û–¥–Ω–∞ –Ω–µ–¥–µ–ª—è | 7 –¥–Ω–µ–π |
| 2.5 | `shouldCalculateOneMonth` | –û–¥–∏–Ω –º–µ—Å—è—Ü | 30 –¥–Ω–µ–π |
| 2.6 | `shouldCalculateOneYear` | –û–¥–∏–Ω –≥–æ–¥ | 365 –¥–Ω–µ–π |
| 2.7 | `shouldCalculateMultipleYears` | –ù–µ—Å–∫–æ–ª—å–∫–æ –ª–µ—Ç (2020-2023) | 1096 –¥–Ω–µ–π |

### –ì—Ä—É–ø–ø–∞ 3: Leap Year Scenarios (4 —Ç–µ—Å—Ç–∞)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 3.1 | `shouldCalculateLeapYear` | –í–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥ (2020) | 366 –¥–Ω–µ–π |
| 3.2 | `shouldHandleFebruary29InLeapYear` | 28 —Ñ–µ–≤ ‚Üí 1 –º–∞—Ä –≤ –≤–∏—Å–æ–∫–æ—Å–Ω–æ–º | 2 –¥–Ω—è |
| 3.3 | `shouldCalculateFromFebruary29ToNextYear` | –û—Ç 29 —Ñ–µ–≤ –¥–æ —Å–ª–µ–¥ –≥–æ–¥–∞ | 365 –¥–Ω–µ–π |
| 3.4 | `shouldHandleFebruaryInNonLeapYear` | –§–µ–≤—Ä–∞–ª—å –≤ –æ–±—ã—á–Ω–æ–º –≥–æ–¥—É | 1 –¥–µ–Ω—å |

### –ì—Ä—É–ø–ø–∞ 4: Edge Cases (6 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 4.1 | `shouldHandleVeryLargeTimeSpan` | –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –ø–µ—Ä–∏–æ–¥ (100+ –ª–µ—Ç) | 44900-45000 –¥–Ω–µ–π |
| 4.2 | `shouldHandleDatesAtStartOfYear` | –ù–∞—á–∞–ª–æ –≥–æ–¥–∞ (1 —è–Ω–≤) | 1 –¥–µ–Ω—å |
| 4.3 | `shouldHandleDatesAtEndOfYear` | –ö–æ–Ω–µ—Ü –≥–æ–¥–∞ (31 –¥–µ–∫) | 1 –¥–µ–Ω—å |
| 4.4 | `shouldHandleYearTransition` | –ü–µ—Ä–µ—Ö–æ–¥ –≥–æ–¥–∞ (31 –¥–µ–∫ ‚Üí 1 —è–Ω–≤) | 1 –¥–µ–Ω—å |
| 4.5 | `shouldHandleCurrentDate` | –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ | 1 –¥–µ–Ω—å |
| 4.6 | `shouldHandleFarFutureDates` | –î–∞–ª–µ–∫–æ–µ –±—É–¥—É—â–µ–µ (100 –ª–µ—Ç) | 36500-36600 –¥–Ω–µ–π |

### –ì—Ä—É–ø–ø–∞ 5: Parameterized Tests (24+ —Ç–µ—Å—Ç–∞)

#### 5.1 Various Date Ranges (7 —Ç–µ—Å—Ç–æ–≤)
| –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|----------------|---------------------|
| 2023-01-01 ‚Üí 2023-01-01 | 0 –¥–Ω–µ–π |
| 2023-01-01 ‚Üí 2023-01-02 | 1 –¥–µ–Ω—å |
| 2023-01-01 ‚Üí 2023-01-10 | 9 –¥–Ω–µ–π |
| 2023-01-01 ‚Üí 2023-01-31 | 30 –¥–Ω–µ–π |
| 2023-01-01 ‚Üí 2023-02-01 | 31 –¥–µ–Ω—å |
| 2023-01-01 ‚Üí 2023-12-31 | 364 –¥–Ω—è |
| 2023-01-01 ‚Üí 2024-01-01 | 365 –¥–Ω–µ–π |

#### 5.2 Negative Days (3 —Ç–µ—Å—Ç–∞)
| –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|----------------|---------------------|
| 2023-01-10 ‚Üí 2023-01-01 | -9 –¥–Ω–µ–π |
| 2023-02-01 ‚Üí 2023-01-01 | -31 –¥–µ–Ω—å |
| 2024-01-01 ‚Üí 2023-01-01 | -365 –¥–Ω–µ–π |

#### 5.3 Different Month Lengths (12 —Ç–µ—Å—Ç–æ–≤)
| –ú–µ—Å—è—Ü | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π |
|-------|----------------|
| –Ø–Ω–≤–∞—Ä—å | 31 |
| –§–µ–≤—Ä–∞–ª—å (–Ω–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π) | 28 |
| –ú–∞—Ä—Ç | 31 |
| –ê–ø—Ä–µ–ª—å | 30 |
| –ú–∞–π | 31 |
| –ò—é–Ω—å | 30 |
| –ò—é–ª—å | 31 |
| –ê–≤–≥—É—Å—Ç | 31 |
| –°–µ–Ω—Ç—è–±—Ä—å | 30 |
| –û–∫—Ç—è–±—Ä—å | 31 |
| –ù–æ—è–±—Ä—å | 30 |
| –î–µ–∫–∞–±—Ä—å | 31 |

### –ì—Ä—É–ø–ø–∞ 6: Special Dates (3 —Ç–µ—Å—Ç–∞)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 6.1 | `shouldHandleCenturyTransition` | –ü–µ—Ä–µ—Ö–æ–¥ —Å—Ç–æ–ª–µ—Ç–∏—è (1999‚Üí2000) | 1 –¥–µ–Ω—å |
| 6.2 | `shouldHandleMillenniumTransition` | –ü–µ—Ä–µ—Ö–æ–¥ —Ç—ã—Å—è—á–µ–ª–µ—Ç–∏—è (2000‚Üí2001) | 1 –¥–µ–Ω—å |
| 6.3 | `shouldHandleYear2000` | –ì–æ–¥ 2000 (–≤–∏—Å–æ–∫–æ—Å–Ω—ã–π) | 366 –¥–Ω–µ–π |

### –ì—Ä—É–ø–ø–∞ 7: Symmetry Tests (2 —Ç–µ—Å—Ç–∞)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 7.1 | `shouldReturnOppositeSignWhenDatesAreSwapped` | –°–º–µ–Ω–∞ –ø–æ—Ä—è–¥–∫–∞ –¥–∞—Ç | –ü—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π –∑–Ω–∞–∫ |
| 7.2 | `shouldReturnSameAbsoluteValueWhenDatesAreSwapped` | –°–º–µ–Ω–∞ –ø–æ—Ä—è–¥–∫–∞ –¥–∞—Ç | –û–¥–∏–Ω–∞–∫–æ–≤–æ–µ |abs| |

---

## 2. TravelCalculatePremiumRequestValidatorTest

**–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 70**

### –ì—Ä—É–ø–ø–∞ 1: PersonFirstName Validation (12 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------------|---------------------|
| 1.1 | `shouldReturnErrorWhenPersonFirstNameIsNull` | null | –û—à–∏–±–∫–∞ "Must not be empty!" |
| 1.2 | `shouldReturnErrorWhenPersonFirstNameIsEmpty` | "" | –û—à–∏–±–∫–∞ "Must not be empty!" |
| 1.3 | `shouldReturnErrorForNullAndEmpty` | null/"" (–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π) | –û—à–∏–±–∫–∞ |
| 1.4 | `shouldAcceptValidPersonFirstName` | "John" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 1.5 | `shouldAcceptVariousValidFirstNames` | "John", "Jean-Pierre", "Mary Ann", "–ò–≤–∞–Ω", "Jos√©", "O'Brien" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 1.6 | `shouldAcceptPersonFirstNameWithSpaces` | "Mary Ann" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 1.7 | `shouldAcceptPersonFirstNameWithHyphen` | "Jean-Pierre" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 1.8 | `shouldAcceptPersonFirstNameWithApostrophe` | "D'Angelo" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 1.9 | `shouldAcceptPersonFirstNameInCyrillic` | "–ò–≤–∞–Ω" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 1.10 | `shouldAcceptVeryLongPersonFirstName` | 100 —Å–∏–º–≤–æ–ª–æ–≤ 'A' | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 1.11 | `shouldAcceptSingleCharacterPersonFirstName` | "A" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |

### –ì—Ä—É–ø–ø–∞ 2: PersonLastName Validation (12 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------------|---------------------|
| 2.1 | `shouldReturnErrorWhenPersonLastNameIsNull` | null | –û—à–∏–±–∫–∞ "Must not be empty!" |
| 2.2 | `shouldReturnErrorWhenPersonLastNameIsEmpty` | "" | –û—à–∏–±–∫–∞ "Must not be empty!" |
| 2.3 | `shouldReturnErrorForNullAndEmpty` | null/"" (–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π) | –û—à–∏–±–∫–∞ |
| 2.4 | `shouldAcceptValidPersonLastName` | "Smith" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 2.5 | `shouldAcceptVariousValidLastNames` | "Smith", "O'Connor", "van der Berg", "–ü–µ—Ç—Ä–æ–≤", "Garc√≠a", "McDonald" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 2.6 | `shouldAcceptPersonLastNameWithSpaces` | "von Neumann" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 2.7 | `shouldAcceptPersonLastNameWithHyphen` | "Smith-Jones" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 2.8 | `shouldAcceptPersonLastNameWithApostrophe` | "O'Brien" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 2.9 | `shouldAcceptPersonLastNameInCyrillic` | "–ü–µ—Ç—Ä–æ–≤" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 2.10 | `shouldAcceptVeryLongPersonLastName` | 100 —Å–∏–º–≤–æ–ª–æ–≤ 'B' | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 2.11 | `shouldAcceptSingleCharacterPersonLastName` | "B" | –ë–µ–∑ –æ—à–∏–±–æ–∫ |

### –ì—Ä—É–ø–ø–∞ 3: AgreementDateFrom Validation (6 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------------|---------------------|
| 3.1 | `shouldReturnErrorWhenAgreementDateFromIsNull` | null | –û—à–∏–±–∫–∞ "Must not be empty!" |
| 3.2 | `shouldAcceptValidAgreementDateFrom` | LocalDate.now() | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 3.3 | `shouldAcceptAgreementDateFromInThePast` | now - 10 –¥–Ω–µ–π | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 3.4 | `shouldAcceptAgreementDateFromInTheFuture` | now + 10 –¥–Ω–µ–π | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 3.5 | `shouldAcceptAgreementDateFromFarInTheFuture` | now + 10 –ª–µ—Ç | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 3.6 | `shouldAcceptLeapYearDate` | 2024-02-29 | –ë–µ–∑ –æ—à–∏–±–æ–∫ |

### –ì—Ä—É–ø–ø–∞ 4: AgreementDateTo Validation (7 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------------|---------------------|
| 4.1 | `shouldReturnErrorWhenAgreementDateToIsNull` | null | –û—à–∏–±–∫–∞ "Must not be empty!" |
| 4.2 | `shouldReturnErrorWhenAgreementDateToIsBeforeAgreementDateFrom` | dateTo < dateFrom | –û—à–∏–±–∫–∞ "Must be after..." |
| 4.3 | `shouldAcceptAgreementDateToAfterAgreementDateFrom` | dateTo > dateFrom | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 4.4 | `shouldAcceptAgreementDateToEqualToAgreementDateFrom` | dateTo = dateFrom | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 4.5 | `shouldAcceptAgreementDateToOneDayAfter` | dateTo = dateFrom + 1 | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 4.6 | `shouldAcceptLongPeriod` | 365+ –¥–Ω–µ–π | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 4.7 | `shouldReturnErrorWhenDateFromIsNullAndDateToIsInvalid` | dateFrom=null, dateTo < implicit | –û—à–∏–±–∫–∞ |

### –ì—Ä—É–ø–ø–∞ 5: Combined Validation (9 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ |
|---|----------------|----------|-------------------|
| 5.1 | `shouldReturnNoErrorsForCompletelyValidRequest` | –í—Å–µ –ø–æ–ª—è –≤–∞–ª–∏–¥–Ω—ã | 0 |
| 5.2 | `shouldReturnAllErrorsWhenAllFieldsAreInvalid` | –í—Å–µ –ø–æ–ª—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã | 4 |
| 5.3 | `shouldReturnMultipleErrorsForMultipleInvalidFields` | firstName –∏ lastName –ø—É—Å—Ç—ã–µ | 2 |
| 5.4 | `shouldReturnErrorOnlyForInvalidFirstName` | –¢–æ–ª—å–∫–æ firstName –Ω–µ–≤–∞–ª–∏–¥–Ω–æ | 1 |
| 5.5 | `shouldReturnErrorOnlyForInvalidLastName` | –¢–æ–ª—å–∫–æ lastName –Ω–µ–≤–∞–ª–∏–¥–Ω–æ | 1 |
| 5.6 | `shouldReturnErrorOnlyForInvalidDateFrom` | –¢–æ–ª—å–∫–æ dateFrom –Ω–µ–≤–∞–ª–∏–¥–Ω–æ | 1 |
| 5.7 | `shouldReturnErrorOnlyForInvalidDateTo` | –¢–æ–ª—å–∫–æ dateTo –Ω–µ–≤–∞–ª–∏–¥–Ω–æ | 1 |
| 5.8 | `shouldReturnThreeErrors` | –ò–º–µ–Ω–∞ + dateTo –Ω–µ–≤–∞–ª–∏–¥–Ω—ã | 3 |
| 5.9 | `shouldReturnBothDateErrors` | –û–±–µ –¥–∞—Ç—ã –Ω–µ–≤–∞–ª–∏–¥–Ω—ã | 2 |

### –ì—Ä—É–ø–ø–∞ 6: Edge Cases (6 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 6.1 | `shouldHandleMinimumValidValues` | –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 6.2 | `shouldHandleMaximumRealisticPeriod` | –ü–µ—Ä–∏–æ–¥ 10 –ª–µ—Ç | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 6.3 | `shouldHandleNamesWithMixedCase` | jOhN, sMiTh | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 6.4 | `shouldHandleNamesWithNumbers` | John2, Smith3 | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 6.5 | `shouldValidateDatesAcrossYearBoundary` | 25 –¥–µ–∫ ‚Üí 5 —è–Ω–≤ | –ë–µ–∑ –æ—à–∏–±–æ–∫ |
| 6.6 | `shouldValidateDatesInLeapYear` | 28 —Ñ–µ–≤ ‚Üí 1 –º–∞—Ä 2024 | –ë–µ–∑ –æ—à–∏–±–æ–∫ |

---

## 3. TravelCalculatePremiumServiceImplTest

**–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 54**

### –ì—Ä—É–ø–ø–∞ 1: Field Copying (7 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | –ü—Ä–æ–≤–µ—Ä–∫–∞ |
|---|----------------|----------|----------|
| 1.1 | `shouldCopyPersonFirstName` | –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ | request.firstName = response.firstName |
| 1.2 | `shouldCopyPersonLastName` | –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏ | request.lastName = response.lastName |
| 1.3 | `shouldCopyAgreementDateFrom` | –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ dateFrom | request.dateFrom = response.dateFrom |
| 1.4 | `shouldCopyAgreementDateTo` | –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ dateTo | request.dateTo = response.dateTo |
| 1.5 | `shouldCopyAllFields` | –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π | assertAll –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª–µ–π |
| 1.6 | `shouldCopyVariousFirstNames` | –†–∞–∑–ª–∏—á–Ω—ã–µ –∏–º–µ–Ω–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π) | John, Jean-Pierre, Mary Ann, –ò–≤–∞–Ω, Jos√© |
| 1.7 | `shouldCopyVariousLastNames` | –†–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–∞–º–∏–ª–∏–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π) | Smith, O'Connor, van der Berg, –ü–µ—Ç—Ä–æ–≤, Garc√≠a |

### –ì—Ä—É–ø–ø–∞ 2: Price Calculation (9 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –ü–µ—Ä–∏–æ–¥ | –û–∂–∏–¥–∞–µ–º–∞—è —Ü–µ–Ω–∞ |
|---|----------------|--------|----------------|
| 2.1 | `shouldCalculateCorrectPriceForVariousPeriods` | 0, 1, 5, 10, 30, 90, 180, 365, 500, 1000 –¥–Ω–µ–π (–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π) | –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è |
| 2.2 | `shouldCalculatePriceForZeroDays` | 0 –¥–Ω–µ–π | 0 |
| 2.3 | `shouldCalculatePriceForOneDay` | 1 –¥–µ–Ω—å | 1 |
| 2.4 | `shouldCalculatePriceForOneWeek` | 7 –¥–Ω–µ–π | 7 |
| 2.5 | `shouldCalculatePriceForOneMonth` | 30 –¥–Ω–µ–π | 30 |
| 2.6 | `shouldCalculatePriceForOneYear` | 365 –¥–Ω–µ–π | 365 |
| 2.7 | `shouldCalculatePriceForLeapYear` | 366 –¥–Ω–µ–π | 366 |
| 2.8 | `shouldCalculatePriceForLongTrip` | 500+ –¥–Ω–µ–π | 500 |
| 2.9 | `shouldNotHaveErrorsInSuccessfulCalculation` | 10 –¥–Ω–µ–π | –ë–µ–∑ –æ—à–∏–±–æ–∫ |

### –ì—Ä—É–ø–ø–∞ 3: Validation Error Handling (6 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –°—Ü–µ–Ω–∞—Ä–∏–π | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 3.1 | `shouldReturnErrorsWhenValidationFails` | 1 –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ | hasErrors=true, 1 –æ—à–∏–±–∫–∞ |
| 3.2 | `shouldReturnMultipleErrors` | 3 –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ | 3 –æ—à–∏–±–∫–∏ |
| 3.3 | `shouldReturnAllFourErrors` | 4 –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ | 4 –æ—à–∏–±–∫–∏ |
| 3.4 | `shouldNotCalculatePriceWhenValidationFails` | –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ | price=null, dateTimeService –Ω–µ –≤—ã–∑–≤–∞–Ω |
| 3.5 | `shouldNotPopulateFieldsWhenValidationFails` | –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ | –í—Å–µ –ø–æ–ª—è=null |
| 3.6 | `shouldPreserveErrorMessages` | –û—à–∏–±–∫–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º | –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ |

### –ì—Ä—É–ø–ø–∞ 4: Dependencies Interaction (7 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –ü—Ä–æ–≤–µ—Ä–∫–∞ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 4.1 | `shouldCallValidatorOnce` | –í—ã–∑–æ–≤ validator | –í—ã–∑–≤–∞–Ω 1 —Ä–∞–∑ |
| 4.2 | `shouldCallDateTimeServiceWithCorrectDates` | –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–∑–æ–≤–∞ | –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞—Ç—ã |
| 4.3 | `shouldCallDateTimeServiceOnce` | –í—ã–∑–æ–≤ dateTimeService | –í—ã–∑–≤–∞–Ω 1 —Ä–∞–∑ |
| 4.4 | `shouldNotCallDateTimeServiceWhenValidationFails` | –ü—Ä–∏ –æ—à–∏–±–∫–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ | –ù–ï –≤—ã–∑–≤–∞–Ω |
| 4.5 | `shouldCallValidatorBeforeDateTimeService` | –ü–æ—Ä—è–¥–æ–∫ –≤—ã–∑–æ–≤–æ–≤ | validator ‚Üí dateTimeService |
| 4.6 | `shouldPassCorrectRequestToValidator` | ArgumentCaptor –¥–ª—è request | –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π request |
| 4.7 | `shouldPassCorrectDatesToDateTimeService` | ArgumentCaptor –¥–ª—è –¥–∞—Ç | –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞—Ç—ã |

### –ì—Ä—É–ø–ø–∞ 5: Edge Cases (8 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------------|---------------------|
| 5.1 | `shouldHandleSpecialCharactersInNames` | Jean-Pierre, O'Connor | –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ |
| 5.2 | `shouldHandleCyrillicCharacters` | –ò–≤–∞–Ω, –ü–µ—Ç—Ä–æ–≤ | –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ |
| 5.3 | `shouldHandleVeryLongNames` | 100 —Å–∏–º–≤–æ–ª–æ–≤ | –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ |
| 5.4 | `shouldHandleSingleCharacterNames` | A, B | –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ |
| 5.5 | `shouldHandleFutureDates` | +10 –ª–µ—Ç | –¶–µ–Ω–∞ = 30 |
| 5.6 | `shouldHandlePastDates` | -1 –≥–æ–¥ | –¶–µ–Ω–∞ = 10 |
| 5.7 | `shouldHandleLeapYearDates` | 28 —Ñ–µ–≤ ‚Üí 1 –º–∞—Ä 2024 | –¶–µ–Ω–∞ = 2 |
| 5.8 | `shouldHandleYearBoundaryCrossing` | 30 –¥–µ–∫ ‚Üí 5 —è–Ω–≤ | –¶–µ–Ω–∞ = 6 |

### –ì—Ä—É–ø–ø–∞ 6: Type and Value Verification (5 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –ü—Ä–æ–≤–µ—Ä–∫–∞ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 6.1 | `shouldReturnNonNullResponse` | Response –Ω–µ null | assertNotNull |
| 6.2 | `shouldReturnBigDecimalPrice` | –¢–∏–ø price | BigDecimal |
| 6.3 | `shouldReturnCorrectDateTypes` | –¢–∏–ø –¥–∞—Ç | LocalDate |
| 6.4 | `shouldReturnCorrectNameTypes` | –¢–∏–ø –∏–º–µ–Ω | String |
| 6.5 | `shouldReturnPriceWithCorrectScale` | Scale —Ü–µ–Ω—ã | 0 |

---

## 4. TravelCalculatePremiumControllerTest

**–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 17**

### –ì—Ä—É–ø–ø–∞ 1: Happy Path (7 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –ó–∞–ø—Ä–æ—Å | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|--------|---------------------|
| 1.1 | `shouldReturnSuccessfulResponse` | –í–∞–ª–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å | HTTP 200, —Ü–µ–Ω–∞=10 |
| 1.2 | `shouldAcceptCalculateEndpoint` | POST /calculate | HTTP 200 |
| 1.3 | `shouldCalculateZeroDaysForSameDates` | –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–∞—Ç—ã | HTTP 200, —Ü–µ–Ω–∞=0 |
| 1.4 | `shouldCalculateLongTripPremium` | 60 –¥–Ω–µ–π | HTTP 200, —Ü–µ–Ω–∞=60 |
| 1.5 | `shouldAcceptSpecialCharactersInNames` | Jean-Pierre, O'Connor | HTTP 200 |
| 1.6 | `shouldAcceptCyrillicCharactersInNames` | –ò–≤–∞–Ω, –ü–µ—Ç—Ä–æ–≤ | HTTP 200 |
| 1.7 | `shouldAcceptValidRequestWithAllFields` | –í—Å–µ –ø–æ–ª—è –≤–∞–ª–∏–¥–Ω—ã | HTTP 200, –≤—Å–µ –ø–æ–ª—è –µ—Å—Ç—å |

### –ì—Ä—É–ø–ø–∞ 2: Validation (7 —Ç–µ—Å—Ç–æ–≤)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|-------------------|---------------------|
| 2.1 | `shouldReturnValidationErrors` | –ü—É—Å—Ç—ã–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è | HTTP 400, 2 –æ—à–∏–±–∫–∏ |
| 2.2 | `shouldHandleEmptyRequestBody` | –í—Å–µ –ø–æ–ª—è –ø—É—Å—Ç—ã–µ | HTTP 400, 4 –æ—à–∏–±–∫–∏ |
| 2.3 | `shouldHandleDateValidation` | dateTo < dateFrom | HTTP 400, 1 –æ—à–∏–±–∫–∞ |
| 2.4 | `shouldReturnErrorWhenOnlyFirstNameIsEmpty` | –¢–æ–ª—å–∫–æ firstName –ø—É—Å—Ç–æ | HTTP 400, 1 –æ—à–∏–±–∫–∞ |
| 2.5 | `shouldReturnErrorWhenOnlyLastNameIsEmpty` | –¢–æ–ª—å–∫–æ lastName –ø—É—Å—Ç–æ | HTTP 400, 1 –æ—à–∏–±–∫–∞ |
| 2.6 | `shouldReturnErrorWhenOnlyDateFromIsNull` | –¢–æ–ª—å–∫–æ dateFrom null | HTTP 400, 1 –æ—à–∏–±–∫–∞ |
| 2.7 | `shouldReturnErrorWhenOnlyDateToIsNull` | –¢–æ–ª—å–∫–æ dateTo null | HTTP 400, 1 –æ—à–∏–±–∫–∞ |

### –ì—Ä—É–ø–ø–∞ 3: Technical Scenarios (3 —Ç–µ—Å—Ç–∞)

| ‚Ññ | –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ | –°—Ü–µ–Ω–∞—Ä–∏–π | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|---|----------------|----------|---------------------|
| 3.1 | `shouldReturnHealthCheckStatus` | GET /health | HTTP 200, "Service is running" |
| 3.2 | `shouldReturnErrorForInvalidContentType` | Content-Type: text/plain | HTTP 415 |
| 3.3 | `shouldReturnErrorForMalformedJson` | –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON | HTTP 500 |

---

## üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

| –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∞—Å—Å | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø |
|----------------|-------------------|------------------|
| DateTimeServiceTest | 45 | 7 |
| ValidatorTest | 70 | 6 |
| ServiceImplTest | 54 | 6 |
| ControllerTest | 17 | 3 |
| **–ò–¢–û–ì–û** | **186** | **22** |

## üéØ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º —Ç–µ—Å—Ç–æ–≤

| –¢–∏–ø —Ç–µ—Å—Ç–∞ | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ | –ü—Ä–æ—Ü–µ–Ω—Ç |
|-----------|-----------|---------|
| –ë–∞–∑–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ | 45 | 24% |
| –í–∞–ª–∏–¥–∞—Ü–∏—è | 55 | 30% |
| –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ | 35 | 19% |
| –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ | 35 | 19% |
| –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è | 16 | 8% |

## üîç –ü–æ–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º

- ‚úÖ **–£—Å–ø–µ—à–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ (Happy Path)**: 100%
- ‚úÖ **–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö**: 100%
- ‚úÖ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫**: 100%
- ‚úÖ **–ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏**: 100%
- ‚úÖ **–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ**: 100%
- ‚úÖ **–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤**: 100%
- ‚úÖ **REST API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã**: 100%

---

## üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è

1. **–ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã** –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ "(–ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π)" - –æ–¥–∏–Ω —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—Ö–æ–¥–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
2. –í—Å–µ —Ç–µ—Å—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç **AAA –ø–∞—Ç—Ç–µ—Ä–Ω** (Arrange-Act-Assert)
3. –¢–µ—Å—Ç—ã **–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω—ã** –∏ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ
4. **@DisplayName** –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø–æ–Ω—è—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
5. **@Nested** –≥—Ä—É–ø–ø—ã –æ—Ä–≥–∞–Ω–∏–∑—É—é—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã